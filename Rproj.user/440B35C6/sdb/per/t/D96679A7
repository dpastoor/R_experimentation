{
    "contents" : "---\ntitle: \"Examples for AUC functions\"\nauthor: \"Devin\"\ndate: \"July 19, 2014\"\noutput: html_document\n---\n\n```{r}\nlibraries <- c(\"knitr\", \"ggplot2\", \"PKPDdatasets\", \"PKPDmisc\", \"dplyr\")\nsuppressMessages(sapply(libraries, require, character.only=T))\nopts_chunk$set(tidy=F)\n```\n\nUse the terribly named `sd_oral_richpk` dataset from my `PKPDdatasets` package and `AUC_partial` and `AUC_inf` functions from `PKPDmisc`\n\navailable via:\n```\nlibrary(devtools)\ninstall_github(\"dpastoor/PKPDdatasets\")\ninstall_github(\"dpastoor/PKPDmisc\")\n```\n\n```{r}\npkdata <- sd_oral_richpk\nhead(pkdata)\n\n#convert all columns to caps for easier recall\nnames(pkdata) <- toupper(names(pkdata))\n\n```\n\n## Basic summary and plots to get a feel for the data\n```{r}\npkdata %>% filter(!duplicated(ID)) %>%  select(AGE, WEIGHT, GENDER, RACE) %>% summary\n```\n\n```{r}\nggdat  <- ggplot(pkdata, aes(x = TIME, y = CONC, group = ID)) \nggdat + geom_line() + geom_point() + \n  base_theme() + xlab(\"Time (hours)\") + ylab(\"Concentration (mg/L)\")\n```\n\n# AUC function examples\n\n## AUC_partial examples\nGet summary of AUC 0-tlast\n```{r}\npkdata %>% \n  group_by(ID) %>% \n  summarize(AUC0_tlast = AUC_partial(TIME, CONC, partialtime = max(TIME))) %>% \n  head(n = 10)\n```\n\nIf you want to carry additional covariates for later summary add them as grouping variables\n\n```{r}\naucs_gender_race  <- pkdata %>% \n  group_by(ID, GENDER, RACE) %>% \n  summarize(AUC0_tlast = AUC_partial(TIME, CONC, partialtime = max(TIME)))\naucs_gender_race %>% head(n = 10)\n```\n\nYou can then do additional summary statistics on a category (or combinations of categories)\n```{r}\naucs_gender_race %>% group_by(GENDER) %>% \n  summarize(meanAUC = mean(AUC0_tlast))\naucs_gender_race %>% group_by(GENDER,RACE) %>% \n  summarize(meanAUC = mean(AUC0_tlast))\n```\n\n## AUC_inf examples\nAUC_inf is a bit more complicated internally than AUC partial, in that there are multiple types of output you can get. This is actually a bad practice, and I will eventually re-write to have two separate functions depending on what the user wants.\n\nBy default, the `AUC_infonly` argument is `TRUE` so only a vector of AUC0_infinity values are returned. This makes it usable inside of dplyr/plyr as you can only have single vector output.\n\n```{r}\naucinfs_race  <- pkdata %>% \n  group_by(ID,RACE) %>% \n  summarize(AUC0_inf = AUC_inf(TIME, CONC))\naucinfs_race %>% head(n = 10)\n```\n\n\nHowever, many times people want additional information, such as the number of points selected in the terminal phase, the adjusted R squared, lambda_z for t1/2, etc. So right now AUC_inf can also output a dataframe containing:\n\n* AUClast\n* AUCinf\n* Extra_percent\n* Adj.R.Sq\n* Lambda_z\n* Num_points_lambda_z\n\nThe easiest way to do so is via the `do` function in dplyr\n\n```{r}\nAUCinf <- pkdata %>% group_by(ID) %>% \n  do(AUC_inf(.$TIME, .$CONC, AUCinf_only = F))\nhead(AUCinf)\n```\n\nYou can also ask for them as individual columns inside of `summarize` and `mutate` commands by asking for specific column names\n\n```{r}\naucinfs_extra  <- pkdata %>% \n  group_by(ID,RACE) %>% \n  summarize(AUC0_inf = AUC_inf(TIME, CONC),\n            extra_percent = round(AUC_inf(TIME, CONC, AUCinf_only = F)[[\"Extra_percent\"]],2))\naucinfs_extra %>% head(n = 10)\n```\n\nA general rule of thumb is you shouldn't have more than ~20% extra (that is `AUCtlast_inf - AUC0_tlast`) to make a valid inference about AUC0_inf, else you are extrapolating too much.\n\n### number of points used in AUC_inf extrapolation\nWhen the extrapolation from tlast to inf is happening, a linear model is fit to 3, 4, 5... of the last points to figure out which provides the best fit and use that to extrapolate from tlast to infinity. By default, the function only checks 3, 4, 5 points. However if you have rich sampling in the terminal phase and want to fit more you can specify via the `last_points` argument. \n\n```{r}\npkdata %>% \n  group_by(ID,RACE) %>% \n  summarize(AUC0_inf = AUC_inf(TIME, CONC, last_points = c(3, 4, 5, 6, 7)),\n            numpoints_extrap = AUC_inf(TIME, CONC, \n                                       last_points = c(3, 4, 5, 6, 7), \n                                       AUCinf_only = F)[[\"Num_points_lambda_z\"]]) %>% \n  head(n = 10)\n```\n\n\n```{r}\nsessionInfo()\n```\n\n",
    "created" : 1405778647997.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4091288630",
    "id" : "D96679A7",
    "lastKnownWriteTime" : 1405781826,
    "path" : "~/Repos/R_experimentation/AUC_functions.Rmd",
    "project_path" : "AUC_functions.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}